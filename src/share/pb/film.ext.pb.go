// Code generated by protoc-gen-go. DO NOT EDIT.
// source: film.ext.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	film.ext.proto

It has these top-level messages:
	HotPlayMoviesReq
	HotPlayMoviesRep
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HotPlayMoviesReq struct {
	Location int64 `protobuf:"varint,1,opt,name=location" json:"location,omitempty"`
}

func (m *HotPlayMoviesReq) Reset()                    { *m = HotPlayMoviesReq{} }
func (m *HotPlayMoviesReq) String() string            { return proto.CompactTextString(m) }
func (*HotPlayMoviesReq) ProtoMessage()               {}
func (*HotPlayMoviesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HotPlayMoviesReq) GetLocation() int64 {
	if m != nil {
		return m.Location
	}
	return 0
}

type HotPlayMoviesRep struct {
}

func (m *HotPlayMoviesRep) Reset()                    { *m = HotPlayMoviesRep{} }
func (m *HotPlayMoviesRep) String() string            { return proto.CompactTextString(m) }
func (*HotPlayMoviesRep) ProtoMessage()               {}
func (*HotPlayMoviesRep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*HotPlayMoviesReq)(nil), "pb.HotPlayMoviesReq")
	proto.RegisterType((*HotPlayMoviesRep)(nil), "pb.HotPlayMoviesRep")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for FilmExtService service

type FilmExtServiceClient interface {
	// 获取最新上映的影片
	HotPlayMovies(ctx context.Context, in *HotPlayMoviesReq, opts ...client.CallOption) (*HotPlayMoviesRep, error)
}

type filmExtServiceClient struct {
	c           client.Client
	serviceName string
}

func NewFilmExtServiceClient(serviceName string, c client.Client) FilmExtServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pb"
	}
	return &filmExtServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *filmExtServiceClient) HotPlayMovies(ctx context.Context, in *HotPlayMoviesReq, opts ...client.CallOption) (*HotPlayMoviesRep, error) {
	req := c.c.NewRequest(c.serviceName, "FilmExtService.HotPlayMovies", in)
	out := new(HotPlayMoviesRep)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FilmExtService service

type FilmExtServiceHandler interface {
	// 获取最新上映的影片
	HotPlayMovies(context.Context, *HotPlayMoviesReq, *HotPlayMoviesRep) error
}

func RegisterFilmExtServiceHandler(s server.Server, hdlr FilmExtServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&FilmExtService{hdlr}, opts...))
}

type FilmExtService struct {
	FilmExtServiceHandler
}

func (h *FilmExtService) HotPlayMovies(ctx context.Context, in *HotPlayMoviesReq, out *HotPlayMoviesRep) error {
	return h.FilmExtServiceHandler.HotPlayMovies(ctx, in, out)
}

func init() { proto.RegisterFile("film.ext.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcb, 0xcc, 0xc9,
	0xd5, 0x4b, 0xad, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2,
	0xe3, 0x12, 0xf0, 0xc8, 0x2f, 0x09, 0xc8, 0x49, 0xac, 0xf4, 0xcd, 0x2f, 0xcb, 0x4c, 0x2d, 0x0e,
	0x4a, 0x2d, 0x14, 0x92, 0xe2, 0xe2, 0xc8, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x93, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0e, 0x82, 0xf3, 0x95, 0x84, 0x30, 0xd4, 0x17, 0x18, 0xf9, 0x73, 0xf1,
	0xb9, 0x65, 0xe6, 0xe4, 0xba, 0x56, 0x94, 0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0xd9,
	0x72, 0xf1, 0xa2, 0xa8, 0x12, 0x12, 0xd1, 0x2b, 0x48, 0xd2, 0x43, 0xb7, 0x48, 0x0a, 0x9b, 0x68,
	0x81, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x7d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x04,
	0x67, 0x73, 0xb1, 0x00, 0x00, 0x00,
}
